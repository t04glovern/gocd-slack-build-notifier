gocd.spark {
  # feature flag for notification plugin, turning this false will not post anything to Spark
  # quite useful while testing / debugging
  enabled = true

  # Enter full FQDN of your GoCD instance. We'll be sending links on your spark channel using this as the base uri.
  #server-host = "http://go.cd/"  # Mandatory Field

  # If you have security enabled, you'll need to provide a username and
  # password for your GoCD server to get more detailed logging.
  #login = "admin"
  #password = "admin"

  # Global default room for all pipelines, these can be overriden at a pipeline level as well
  #room = "" # Defaults to the webhook configured channel

  # Bearer/Access token for your bot https://developer.ciscospark.com/bot-detail.html
  bearerToken = "" # Mandatory field

  # Setup up an incoming webhook in your spark team on https://developer.ciscospark.com/resource-webhooks.html
  webhookUrl: "" # Mandatory field
  webhookSecret: "" # Mandatory field
  #webhookName: "GoCD Webhook"

  # If you don't want to see the console log links in the notification (for size concerns).
  # Defaults to true.
  #display-console-log-links = true

  # If you don't want to see the revision changes in the notification (for size or confidentiality concerns)
  # defaults to true
  #displayMaterialChanges = true

  # TODO - Implementation is not yet pluggable
  listener = "com.nathanglover.gocd.spark.SparkPipelineListener"

  # Default settings for pipelines
  default {
    name = ".*"
    stage = ".*"
    group = ".*"
    # you can provide multiple values by separating them with | (pipe) symbol - failed|broken
    state = "broken|failed|fixed|cancelled" # accepted values - failed / broken / fixed / passed / cancelled / all
    #room = "gocd"   # Mandatory field
  }

  # Example settings would be like
  # pipelines = [{
  #   nameRegex = "upc14"
  #   room = "#"
  #   state = "failed|broken"
  # }]
  pipelines = [{
    name = ".*"
    stage = ".*"
    state = "broken|failed|fixed|cancelled"
  }]
}

